def binary_search(nums,target):
    #this is a binary search template
    #input is nums - a list of numbers, and target is another number to locate
    #return is the index of the first occurence of the sorted num
    #allows for repeated elements in nums
    nums.sort()
    l, r = 0, len(nums) - 1
    result = None
    while l<=r:
        mid = (l+r)//2
        #print('left=',l,'right=',r,'starting mid=',mid)
        if nums[mid] > target:
            r = mid -1 
        elif nums[mid]< target:
            l = mid +1
        else:
            result = mid
            r = mid -1
        #print('updated mid=',mid)
    return result

def binsearch_firstneg(nums):
    #this helper function returns the index of the first negative number in a descending array
    #if there is no negative number, return -1
    l , r = 0, len(nums)-1
    result = -1
    if len(nums)==0:
        result = -1
    else:
        if nums[l] <0: 
            result = 0
        elif nums[r] >0:
            result = -1
        else: 
            while l<=r :
                mid = (l+r)//2
                if nums[mid] >=0:
                    l = mid +1
                else:
                    if mid == 0 or nums[mid-1]>=0:
                        result = mid
                        break
                    else:
                        r = mid -1
    return result
